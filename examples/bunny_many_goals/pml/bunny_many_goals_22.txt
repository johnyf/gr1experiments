#define H 22
#define W 21

free env int(1, W) xt;
env int(0, H) yt;

assume env proctype taz(){
    do
    :: yt = yt - 1
    :: yt = yt + 1
    :: skip
    od
}

assume ltl { []<>(yt == 0) }

sys int(0, H) x;
sys int(0, H) y;

assert sys proctype bunny(){
    do
    :: x = x - 1
    :: x = x + 1
    :: y = y - 1
    :: y = y + 1
    :: skip
    od
}

assert ltl {
    [] ! ((x == xt) && (y == yt)) &&
    [] ! ((xt' == x) && (yt' == y))
}
assert ltl { []<>((x == 0) && (y == 0)) && []<>((x == 0) && (y == 1)) && []<>((x == 0) && (y == 2)) && []<>((x == 0) && (y == 3)) && []<>((x == 0) && (y == 4)) && []<>((x == 0) && (y == 5)) && []<>((x == 0) && (y == 6)) && []<>((x == 0) && (y == 7)) && []<>((x == 0) && (y == 8)) && []<>((x == 0) && (y == 9)) && []<>((x == 0) && (y == 10)) && []<>((x == 0) && (y == 11)) && []<>((x == 0) && (y == 12)) && []<>((x == 0) && (y == 13)) && []<>((x == 0) && (y == 14)) && []<>((x == 0) && (y == 15)) && []<>((x == 0) && (y == 16)) && []<>((x == 0) && (y == 17)) && []<>((x == 0) && (y == 18)) && []<>((x == 0) && (y == 19)) && []<>((x == 0) && (y == 20)) && []<>((x == 0) && (y == 21)) && []<>((x == 22) && (y == 0)) && []<>((x == 22) && (y == 1)) && []<>((x == 22) && (y == 2)) && []<>((x == 22) && (y == 3)) && []<>((x == 22) && (y == 4)) && []<>((x == 22) && (y == 5)) && []<>((x == 22) && (y == 6)) && []<>((x == 22) && (y == 7)) && []<>((x == 22) && (y == 8)) && []<>((x == 22) && (y == 9)) && []<>((x == 22) && (y == 10)) && []<>((x == 22) && (y == 11)) && []<>((x == 22) && (y == 12)) && []<>((x == 22) && (y == 13)) && []<>((x == 22) && (y == 14)) && []<>((x == 22) && (y == 15)) && []<>((x == 22) && (y == 16)) && []<>((x == 22) && (y == 17)) && []<>((x == 22) && (y == 18)) && []<>((x == 22) && (y == 19)) && []<>((x == 22) && (y == 20)) && []<>((x == 22) && (y == 21)) }